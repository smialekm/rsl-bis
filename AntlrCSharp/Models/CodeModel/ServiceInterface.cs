///////////////////////////////////////////////////////////
//  ServiceInterface.cs
//  Implementation of the Class ServiceInterface
//  Generated by Enterprise Architect
//  Created on:      23-sty-2024 15:01:55
//  Original author: smial
///////////////////////////////////////////////////////////

using System.Collections.Generic;
using System.Linq;
namespace CodeModel {
	public class ServiceInterface : ClassFileGenerator {
		public List<SOperation> signatures = new List<SOperation>();

		public ServiceInterface(){}

        public override string GetElemName(){
            return "I" + Utils.ToPascalCase(name);
        }

        public override string GetVarName(){
            return "i" + Utils.ToPascalCase(name);
        }

        public string GetSvcName(){
            return Utils.ToPascalCase(name) + "Proxy";
        }

        public override string ToCode(int tabs){
            string ts = Utils.GetTabString(tabs);
            string code = ts + "export interface " + GetElemName() + " {\n";
            code += string.Join("", signatures.Select(x => x.ToCode(tabs + 1) + ";\n"));
            code += ts + "}\n\n";

            code += ts + "export class " + GetSvcName() + " implements " + GetElemName() + "{\n\n";
            code += string.Join("", signatures.Select(x => x.ToCode(tabs + 1) + " {\n\n" + ts + "\t}\n"));
            code += ts + "}\n\n";
            return code;
        }

        protected override string GetFileName()
        {
            return "I " + name;
        }
    }
}