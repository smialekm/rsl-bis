///////////////////////////////////////////////////////////
//  ControllerFunction.cs
//  Implementation of the Class ControllerFunction
//  Generated by Enterprise Architect
//  Created on:      23-sty-2024 15:01:54
//  Original author: smial
///////////////////////////////////////////////////////////

using System.Collections.Generic;
using System.Linq;
namespace CodeModel {
	public class ControllerFunction : FileGenerator {
		public List<COperation> functions = new List<COperation>();
		public List<UseCaseClass> useCases = new List<UseCaseClass>();

		public ControllerFunction(){}

        public override string GetElemName(){
            return "C" + Utils.ToPascalCase(name);
        }

        private string GetImports(){
            List<string> dataObjects = new List<string>();
            dataObjects.Add(GetElemName().Substring(1) + "State");
            foreach (COperation cop in functions){
                foreach (DataAggregate var in cop.data){
                    string name = var.GetElemName();
                    if (!dataObjects.Contains(name)) dataObjects.Add(name);
                }
                foreach (Parameter par in cop.parameters) {
                    string name = par.ToTypeCode();
                    if (!dataObjects.Contains(name) && "result" != name) dataObjects.Add(name);
                }
            }
            string code = "import { " + string.Join(", ", dataObjects);
            code += " } from \"../../viewmodel/ViewModel\";\n";
            
            foreach (UseCaseClass ucc in useCases)
                code += "import { " + ucc.GetElemName() + " } from \"../../usecases/" + ucc.GetElemName() + "\";\n";
            return code + "\n";
        }

        public override string ToCode(int tabs){
            string ts = Utils.GetTabString(tabs);
            string code = GetImports();
            // export function CCLientListForm(
            code += ts + "export function " + GetElemName() + "(\n";
            //   state: ClientListFormData,
            code += ts + "\tstate: " + Utils.ToPascalCase(name) + "State,\n\t" + ts;
            //   showClientList: UCShowClientList
            code += string.Join(",\n\t" + ts, useCases.Select(x => x.GetVarName() + ": " + x.GetElemName()));
            // ) {
            code += "\n) {\n" + ts;
            //   >>>sub-functions<<<
            code += string.Join("\n" + ts,functions.Select(x => x.ToCode(tabs + 1)));
            //   return [selectClose, selectFindClient, invokeCheckFindClient];
            code += "\n\t" + ts + "return [" + string.Join(", ", functions.Select(x => x.GetElemName())) + "];\n" + ts + "}";
            return code;
        }

        protected override string GetFileName(){
            return "C " + name;
        }

    }
}